# /opt/docker-compose.yml
---
    #version: "2.1"
    #version: '3'
    
    ###########################################################
    # All services
    ###########################################################
    
    services:
    ###########################################################
    # Manage containers - Auto update
    ###########################################################
    
        ouroboros:
            image: pyouroboros/ouroboros
            container_name: ouroboros
            environment:
                - CLEANUP=true
                - INTERVAL=80000
                - LOG_LEVEL=info
                - SELF_UPDATE=true
                - TZ=${TZ}
                - IGNORE=traefik
            volumes:
                - /var/run/docker.sock:/var/run/docker.sock:ro
            restart: unless-stopped

        # portainer:
        #     image: portainer/portainer-ce
        #     container_name: portainer
        #     volumes:
        #         - /var/run/docker.sock:/var/run/docker.sock
        #         - ${DOCKERDIR}/portainer:/data
        #     #ports:
        #         #- ${HOST1_IP}:${www_portainer}:${www_portainer}
        #         #- 8000:8000
        #         #- 9000:9000
        #     restart: always
    
    ###########################################################
    # Reverse Proxy, Dynamic DNS, Ad-block, MFA, VPN
    ###########################################################
    
        swag: # formerly letsencrypt
            image: lscr.io/linuxserver/swag
            container_name: swag
            cap_add:
                - NET_ADMIN
            environment:
                - PUID=${PUID}
                - PGID=${PGID}
                - TZ=${TZ}
                - UMASK=002
                - URL=${DOMAIN_NAME}
                - SUBDOMAINS=${SUBDOMAINS}
                - VALIDATION=${VALIDATION}
                - DNSPLUGIN=${DNSPLUGIN}
                - PROPAGATION=${PROPAGATION}
                - DUCKDNSTOKEN=${DUCKDNS_TOKEN}
                - EMAIL=${DOMAIN_EMAIL}
                - ONLY_SUBDOMAINS=${ONLY_SUBDOMAINS}
                - EXTRA_DOMAINS=${EXTRA_DOMAINS}
                - STAGING=${STAGING}
            volumes:
                - ${DOCKERDIR}/letsencrypt:/config
                - ${DOCKERDIR}/shared:/shared
                - ${DOCKERDIR}/shared/.htpasswd:/config/nginx/.htpasswd
            ports:
                - ${HOST1_IP}:80:80
                - ${HOST1_IP}:443:443
            restart: unless-stopped
    
        duckdns:
            image: lscr.io/linuxserver/duckdns
            container_name: duckdns
            environment:
                - PUID=${PUID}
                - PGID=${PGID}
                - TZ=${TZ}
                - SUBDOMAINS=${DOMAIN_NAME}
                - TOKEN=${DUCKDNS_TOKEN}
                - LOG_FILE=true
                - UMASK=002 #optional
            volumes:
                - ${DOCKERDIR}/duckdns:/config
            restart: unless-stopped
    
        pihole:
            image: pihole/pihole:latest
            container_name: pihole
            cap_add:
                - NET_ADMIN
            networks: 
                macvlan_network:
                    ipv4_address: ${PIHOLE_IP}
            environment:
                TZ: ${TZ}
                WEBPASSWORD: ${PIHOLE_PWD}
                DNSSEC: "true"
                ServerIP: ${PIHOLE_IP}
                PIHOLE_DNS_: 1.1.1.3;1.0.0.3
            volumes:
                - ${DOCKERDIR}/pihole/etc-pihole:/etc/pihole
                - ${DOCKERDIR}/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
            ports:
                - 53:53/tcp
                - 53:53/udp
                - 67:67/udp
                - 80:80/tcp
            restart: unless-stopped
    
        #adguard:
        #    image: adguard/adguardhome
        #    container_name: adguard
        #    cap_add:
        #        - NET_ADMIN
        #    network_mode: host
        #    #environment:
        #    volumes:
        #        - ${DOCKERDIR}/adguard/data:/opt/adguardhome/work
        #        - ${DOCKERDIR}/adguard/config:/opt/adguardhome/conf
        #        - ${DOCKERDIR}/letsencrypt/etc/letsencrypt:/opt/ssl
        #    #ports:
        #    #    - 53:53/tcp
        #    #    - 53:53/udp
        #    #    - 67:67/udp
        #    #    - 68:68/tcp
        #    #    - 68:68/udp
        #    #    - 853:853
        #    #    - 3000:3000
        #    restart: unless-stopped

        authelia:
            image: authelia/authelia
            container_name: authelia
            environment:
                TZ: ${TZ}
            volumes:
                - ${DOCKERDIR}/authelia:/config
            restart: unless-stopped
        
        wireguard:
            image: lscr.io/linuxserver/wireguard
            container_name: wireguard
            cap_add:
                - NET_ADMIN
                - SYS_MODULE
            environment:
                PUID: ${PUID}
                PGID: ${PGID}
                TZ: ${TZ}
                UMASK: 002
                SERVERURL: wireguard.${DOMAIN_NAME} #optional
                SERVERPORT: ${udp_wireguard} #optional
                PEERS: matt,rebekah,mary,vector #optional
                PEERDNS: auto #optional
                INTERNAL_SUBNET: 10.13.13.0 #optional
                ALLOWEDIPS: 0.0.0.0/0 #optional
            volumes:
                - ${DOCKERDIR}/wireguard:/config
                - /lib/modules:/lib/modules
            ports:
                - ${HOST1_IP}:${udp_wireguard}:${udp_wireguard}/udp
            sysctls:
                - net.ipv4.conf.all.src_valid_mark=1
            restart: unless-stopped
    
    ###########################################################
    # Homepage
    ###########################################################
        
        heimdall:
            image: lscr.io/linuxserver/heimdall
            container_name: heimdall
            environment:
                PUID: ${PUID}
                PGID: ${PGID}
                TZ: ${TZ}
                UMASK: 002
            volumes:
                - ${DOCKERDIR}/heimdall:/config
                #- ${DOCKERDIR}/shared/.htpasswd:/config/nginx/.htpasswd
            restart: unless-stopped
        
    ###########################################################
    # UNIFI
    ###########################################################
    
        unifi:
           image: lscr.io/linuxserver/unifi-controller
           container_name: unifi
           environment:
               PUID: ${PUID}
               PGID: ${PGID}
               TZ: ${TZ}
               UMASK: 002
           volumes:
               - ${DOCKERDIR}/unifi:/config
           ports:
               - ${HOST1_IP}:${unifi_STUN}:${unifi_STUN}/udp
               - ${HOST1_IP}:${unifi_AP_discover}:${unifi_AP_discover}/udp
               - ${HOST1_IP}:${unifi_comm}:${unifi_comm}
               - ${HOST1_IP}:${unifi_www}:${unifi_www}
               - ${HOST1_IP}:${unifi_L2_discover}:${unifi_L2_discover}/udp
               - ${HOST1_IP}:${unifi_guest_https}:${unifi_guest_https}
               - ${HOST1_IP}:${unifi_guest_http}:${unifi_guest_http}
               - ${HOST1_IP}:${unifi_mobile_throughput}:${unifi_mobile_throughput}
               - ${HOST1_IP}:${unifi_remote_syslog}:${unifi_remote_syslog} 
           restart: unless-stopped
    
    ###########################################################
    # Media
    ###########################################################
    
        plex:
            image: lscr.io/linuxserver/plex
            container_name: plex
            network_mode: host
            environment:
                - PUID=${PUID}
                - PGID=${PGID}
                - VERSION=docker
                - UMASK=002 #optional
                - PLEX_CLAIM= "nope" #optional
                - TZ=${TZ}
                - NVIDIA_VISIBLE_DEVICES=all
            volumes:
                - ${DOCKERDIR}/plex:/config
                - /mnt/storage/tv:/tv
                - /mnt/storage/movies:/movies
                - /mnt/storage/kid_tv:/kid_tv
                - /mnt/storage/kid_movies:/kid_movies
                - /mnt/storage/videos:/videos
            restart: unless-stopped
      
        tautulli:
            image: lscr.io/linuxserver/tautulli
            container_name: tautulli
            environment:
                - PUID=${PUID}
                - PGID=${PGID}
                - TZ=${TZ}
                - UMASK=002
            volumes:
                - ${DOCKERDIR}/tautulli:/config
                - ${DOCKERDIR}/plex/Library/Application Support/Plex Media Server/Logs:/logs:ro
    
            ports:
                - ${HOST1_IP}:${www_tautulli}:${www_tautulli}
            restart: unless-stopped
    
        ombi:
            image: lscr.io/linuxserver/ombi
            container_name: ombi
            environment:
                PUID: ${PUID}
                PGID: ${PGID}
                TZ: ${TZ}
                UMASK: 002
            volumes:
                - ${DOCKERDIR}/ombi:/config
            ports:
                - ${HOST1_IP}:${www_ombi}:${www_ombi}
            restart: unless-stopped
            
        overseerr:
            image: lscr.io/linuxserver/overseerr
            container_name: overseerr
            environment:
                PUID: ${PUID}
                PGID: ${PGID}
                TZ: ${TZ}
                UMASK: 002
            volumes:
                - ${DOCKERDIR}/overseerr:/config
            #ports:
            #    - ${HOST1_IP}:${www_overseerr}:${www_overseerr}
            restart: unless-stopped
      
        qbittorrent:
            image: lscr.io/linuxserver/qbittorrent
            container_name: qbittorrent
            environment:
                - PUID=${PUID}
                - PGID=${PGID}
                - TZ=${TZ}
                - UMASK=002
                - WEBUI_PORT=${www_qbittorrent}
            volumes:
                - ${DOCKERDIR}/qbittorrent:/config
                - ${DOCKERDIR}/shared/downloads:/downloads
            ports:
                - ${HOST1_IP}:6881:6881
                - ${HOST1_IP}:6881:6881/udp
                - ${HOST1_IP}:${www_qbittorrent}:${www_qbittorrent}
            restart: unless-stopped
     
        sonarr:
            image: lscr.io/linuxserver/sonarr
            container_name: sonarr
            environment:
                - PUID=${PUID}
                - PGID=${PGID}
                - TZ=${TZ}
                - UMASK=002
            volumes:
                - ${DOCKERDIR}/sonarr:/config
                - /mnt/storage/tv:/tv
                - /mnt/storage/kid_tv:/kid_tv
                - ${DOCKERDIR}/shared/downloads/tv-sonarr:/downloads
            ports:
                - ${HOST1_IP}:${www_sonarr}:${www_sonarr}
            restart: unless-stopped
    
        radarr:
            image: lscr.io/linuxserver/radarr
            container_name: radarr
            environment:
                - PUID=${PUID}
                - PGID=${PGID}
                - TZ=${TZ}
                - UMASK=002
            volumes:
                - ${DOCKERDIR}/radarr:/config
                - /mnt/storage/movies:/movies
                - /mnt/storage/kid_movies:/kid_movies
                - ${DOCKERDIR}/shared/downloads/radarr:/downloads
            ports:
                - ${HOST1_IP}:${www_radarr}:${www_radarr}
            restart: unless-stopped
    
        jackett:
            image: lscr.io/linuxserver/jackett
            container_name: jackett
            environment:
                PUID: ${PUID}
                PGID: ${PGID}
                TZ: ${TZ}
                UMASK: 002
                AUTO_UPDATE: "true"
            volumes:
                - ${DOCKERDIR}/jackett:/config
                - ${DOCKERDIR}/shared/downloads
            ports:
                - ${HOST1_IP}:${www_jacket}:${www_jacket}
            restart: unless-stopped
    
    ###########################################################
    # Cloud
    ###########################################################
    
        nextcloud:
            image: lscr.io/linuxserver/nextcloud
            container_name: nextcloud
            environment:
                - PUID=${PUID}
                - PGID=${PGID}
                - TZ=${TZ}
                - UMASK=002
            volumes:
                - ${DOCKERDIR}/nextcloud:/config
                - /mnt/storage/nextcloud:/data
                - /mnt/storage/backup:/backup
            depends_on:
                - mariadb
            restart: unless-stopped
    
    ###########################################################
    # Databases
    ###########################################################
    
        mariadb:
            image: lscr.io/linuxserver/mariadb
            container_name: mariadb
            environment:
                - PUID=${PUID}
                - PGID=${PGID}
                - TZ=${TZ}
                - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
                - MYSQL_DATABASE=${MYSQL_DATABASE}
                - MYSQL_USER=${MYSQL_USER}
                - MYSQL_PASSWORD=${MYSQL_PASSWORD}
                - REMOTE_SQL=${REMOTE_SQL}
            volumes:
                - ${DOCKERDIR}/mariadb:/config
                - /etc/timezone:/etc/timezone:ro
                - /etc/localtime:/etc/localtime:ro
            restart: unless-stopped
    
    ###########################################################
    # Lancache
    ###########################################################
    
        lancache:
            image: lancachenet/monolithic:latest
            container_name: lancache
            networks: 
                macvlan_network:
                    ipv4_address: ${LANCACHE_IP}
            environment:
                TZ: ${TZ}
                UPSTREAM_DNS: "1.1.1.3; 1.0.0.3"
            volumes:
                - /mnt/storage/backup/lancache:/data/cache
                - ${DOCKERDIR}/lancache:/data/logs
            ports:
                - ${LANCACHE_IP}:80:80/tcp
                - ${LANCACHE_IP}:443:443/tcp
            restart: unless-stopped
    
    ###########################################################
    # Minecraft
    ###########################################################
    
        minecraft_router:
            image: itzg/mc-router
            container_name: mc-router
            environment: 
                UID: ${PUID}
                GID: ${PGID}
                TS: ${TZ}
            ports:
                - ${HOST1_IP}:${tcp_minecraft}:${tcp_minecraft}
            command:
                --mapping=minecraft.${DOMAIN_NAME}=minecraft_vanilla:25565,regrowth.${DOMAIN_NAME}=minecraft_regrowth:25565
            restart: unless-stopped
    
        minecraft_vanilla:
            image: itzg/minecraft-server
            container_name: minecraft_vanilla
            environment:
                UID: ${PUID}
                GID: ${PGID}
                TZ: ${TZ}
                EULA: "true"
                PVP: "false"
                MEMORY: 4G
            volumes:
                - ${DOCKERDIR}/minecraft/vanilla:/data
            restart: unless-stopped
        
        minecraft_regrowth:
            image: itzg/minecraft-server
            #image: itzg/minecraft-server:multiarch #for use with FTB modpacks
            container_name: minecraft_regrowth
            environment:
                UID: ${PUID}
                GID: ${PGID}
                TZ: ${TZ}
                EULA: "true"
                TYPE: CURSEFORGE
                #TYPE: FTBA
                CF_SERVER_MOD: /modpacks/RegrowthServer.zip
                PVP: "false"
                MEMORY: 4G
            volumes:
                - ${DOCKERDIR}/minecraft/regrowth:/data
                - ${DOCKERDIR}/minecraft/modpacks:/modpacks:ro
            restart: unless-stopped
    
    ###########################################################
    # Misc tools
    ###########################################################
    
    #    whoami_internal:
    #        image: containous/whoami
    #        container_name: whoami_internal
    #        labels:
    #            - traefik.enable=true
    #            - traefik.http.routers.whoami_internal.rule=HostHeader(`whoami.docker.localhost`) 
        
    #    whoami_external:
    #        image: containous/whoami
    #        container_name: whoami_external
    #        labels:
    #            - traefik.enable=true
    #            - traefik.http.routers.whoami_external.rule=HostHeader(`whoami.${DOMAINNAME}`)
    #            - traefik.http.routers.whoami_external.entrypoints=https
    #            - traefik.http.routers.whoami_external.tls.certresolver=myresolver
    
    ###########################################################
    # Network definitions
    ###########################################################
    networks:
        macvlan_network:                            # Name of network
            driver: macvlan                         # Use the macvlan network driver
            driver_opts:
                parent: enp3s0                      # If open vSwitch is disabled use eth0 (or eth1 +)
            ipam:
                config:
                    - subnet: 192.168.1.0/24        # Specify subnet
                      gateway: 192.168.1.1          # Gateway address
                      ip-range: 192.168.1.32/29     # Available IP addresses
                      aux-address:
                        teletraan2: 192.168.1.38    # reserved for host address of macvlan-shim

            
